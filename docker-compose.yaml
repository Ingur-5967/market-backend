version: '3'

services:
  identity-user-service:
    image: identity-user-service-image:latest
    hostname: identity-service
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      - spring.jpa.generate-ddl=true
      - spring.jpa.hibernate.ddl-auto=update
    ports:
      - '8081:8081'
    networks:
      - gateway-server-service_eureka_network
    depends_on:
      - postgres
      - zookeeper
      - kafka
    env_file:
      - .env

  postgres:
    image: postgres:14.1-alpine
    hostname: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_DB: ${DATASOURCE_URL}
      POSTGRES_USER: ${DATASOURCE_USERNAME}
    ports:
      - '5432:5432'
    networks:
      - gateway-server-service_eureka_network
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - gateway-server-service_eureka_network
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    ports:
      - "2181:2181"
    networks:
      - gateway-server-service_eureka_network

networks:
  gateway-server-service_eureka_network:
    external: true

volumes:
  postgres_data:
    driver: local