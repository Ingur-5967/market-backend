version: '3'

services:
  product-service:
    image: product-service-image:latest
    hostname: product-service
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      - spring.jpa.generate-ddl=true
      - spring.jpa.hibernate.ddl-auto=update
    ports:
      - '8082:8082'
    networks:
      - gateway-server-service_eureka_network
    depends_on:
      - postgres
      - minio
      - swagger-ui

  postgres:
    image: postgres:14.1-alpine
    hostname: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DATASOURCE_DB}
      POSTGRES_USER: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
    ports:
      - '5431:5431'
    networks:
      - gateway-server-service_eureka_network
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8079:8079"
    environment:
      SWAGGER_JSON: /data/swagger.yml
    volumes:
      - ./data:/data

  minio:
    restart: always
    image: quay.io/minio/minio
    command: server /data --console-address ":9090"
    hostname: minio-server
    env_file: .env
    ports:
      - "9000:9000"
      - "9090:9090"
      - "9091:9091"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ~/minio/data:/data
    networks:
      - gateway-server-service_eureka_network

networks:
  gateway-server-service_eureka_network:
    external: true

volumes:
  postgres_data:
    driver: local