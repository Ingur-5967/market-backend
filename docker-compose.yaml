version: '3'

services:
  identity-user-service:
    image: identity-user-service-image:latest
    hostname: identity-service
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      - spring.jpa.generate-ddl=true
      - spring.jpa.hibernate.ddl-auto=update
    ports:
      - '8081:8081'
    networks:
      - eureka_network
    depends_on:
      - postgres
      - swagger-ui

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8078:8078"
    environment:
      SWAGGER_JSON: /data/swagger.yml
    networks:
      - eureka_network
    volumes:
      - ./data:/data

  postgres:
    image: postgres:14.1-alpine
    hostname: postgres-identity-service
    restart: always
    environment:
      POSTGRES_URL: ${DATASOURCE_URL}
      POSTGRES_DB: ${DATASOURCE_DB}
      POSTGRES_USER: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
    ports:
      - '5432:5432'
    networks:
      - eureka_network
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--log.level=debug"
    volumes:
      - ./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      PROMETHEUS_URL: http://prometheus:9090
      LOKI_URL: http://loki:3100
    volumes:
      - ./infrastructure/grafana/datasources/:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
      - loki

networks:
  eureka_network:
    external: true

volumes:
  postgres_data:
    driver: local